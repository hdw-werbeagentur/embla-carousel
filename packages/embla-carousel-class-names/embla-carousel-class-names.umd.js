!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):(e="undefined"!=typeof globalThis?globalThis:e||self).EmblaCarouselClassNames=n()}(this,(function(){"use strict";const e={active:!0,breakpoints:{},selected:"is-selected",draggable:"is-draggable",dragging:"is-dragging"};function n(e,n){const o=e.classList;n&&o.contains(n)&&o.remove(n)}function o(e,n){const o=e.classList;n&&!o.contains(n)&&o.add(n)}function t(i={}){let s,a,c,d;const r=["select","pointerUp"],l=["pointerDown","pointerUp"];function f(e,t){"pointerDown"===t?o(c,s.dragging):n(c,s.dragging)}function g(){const e=a.slidesInView(!0);a.slidesNotInView(!0).forEach((e=>n(d[e],s.selected))),e.forEach((e=>o(d[e],s.selected)))}return{name:"classNames",options:i,init:function(n,p){a=n;const{mergeOptions:u,optionsAtMedia:b}=p,h=u(e,t.globalOptions),m=u(h,i);s=b(m),c=a.rootNode(),d=a.slideNodes(),!!a.internalEngine().options.watchDrag&&o(c,s.draggable),s.dragging&&l.forEach((e=>a.on(e,f))),s.selected&&(r.forEach((e=>a.on(e,g))),g())},destroy:function(){n(c,s.draggable),l.forEach((e=>a.off(e,f))),r.forEach((e=>a.off(e,g))),d.forEach((e=>n(e,s.selected)))}}}return t.globalOptions=void 0,t}));
